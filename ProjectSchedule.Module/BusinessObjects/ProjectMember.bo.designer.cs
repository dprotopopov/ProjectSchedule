//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using DevExpress.Persistent.Base;
using DevExpress.Persistent.BaseImpl;
using DevExpress.Xpo;
using DevExpress.ExpressApp.Security;
using DevExpress.Persistent.Validation;
using DevExpress.Persistent.Base.Security;
using System.ComponentModel;
using DevExpress.ExpressApp.Utils;
namespace ProjectSchedule.Module.BusinessObjects
{
  [DefaultClassOptions]
  public partial class ProjectMember : Person, ISecurityUser, IAuthenticationStandardUser, IAuthenticationActiveDirectoryUser, ISecurityUserWithRoles, IOperationPermissionProvider
  {
    public ProjectMember(DevExpress.Xpo.Session session)
      : base(session)
    {
    }
    private bool isActive = true;
    public bool IsActive
    {
      get
      {
        return isActive;
      }
      set
      {
        SetPropertyValue("IsActive", ref isActive, value);
      }
    }
    private string userName = String.Empty;
    [RuleRequiredField("ProjectMemberUserNameRequired", DefaultContexts.Save)]
    [RuleUniqueValue("ProjectMemberUserNameIsUnique", DefaultContexts.Save, "The login with the entered user name was already registered within the system.")]
    public string UserName
    {
      get
      {
        return userName;
      }
      set
      {
        SetPropertyValue("UserName", ref userName, value);
      }
    }
    private bool changePasswordOnFirstLogon;
    public bool ChangePasswordOnFirstLogon
    {
      get
      {
        return changePasswordOnFirstLogon;
      }
      set
      {
        SetPropertyValue("ChangePasswordOnFirstLogon", ref changePasswordOnFirstLogon, value);
      }
    }
    private string storedPassword;
    [Browsable(false),
    Size(SizeAttribute.Unlimited),
    Persistent,
    SecurityBrowsable]
    protected string StoredPassword
    {
      get
      {
        return storedPassword;
      }
      set
      {
        storedPassword = value;
      }
    }
    public bool ComparePassword(string password)
    {
      return SecurityUserBase.ComparePassword(this.storedPassword, password);
    }
    public void SetPassword(string password)
    {
      this.storedPassword = new PasswordCryptographer().GenerateSaltedPassword(password);
      OnChanged("StoredPassword");
    }
    IList<ISecurityRole> ISecurityUserWithRoles.Roles
    {
      get
      {
        IList<ISecurityRole> result = new List<ISecurityRole>();
        foreach (ApplicationRole role in ApplicationRoles)
        {
          result.Add(role);
        }
        return result;
      }
    }
    [Association("ProjectMembers-ApplicationRoles")]
    [RuleRequiredField("ApplicationRoleIsRequired", DefaultContexts.Save, TargetCriteria = "IsActive", CustomMessageTemplate = "An active employee must have at least one role assigned")]
    public XPCollection<ApplicationRole> ApplicationRoles
    {
      get
      {
        return GetCollection<ApplicationRole>("ApplicationRoles");
      }
    }
    IEnumerable<IOperationPermission> IOperationPermissionProvider.GetPermissions()
    {
      return new IOperationPermission[0];
    }
    IEnumerable<IOperationPermissionProvider> IOperationPermissionProvider.GetChildren()
    {
      return new EnumerableConverter<IOperationPermissionProvider, ApplicationRole>(ApplicationRoles);
    }
    [DevExpress.Xpo.AssociationAttribute("ReportToMembers-SuperviseForMembers")]
    public XPCollection<ProjectSchedule.Module.BusinessObjects.ProjectMember> SuperviseForMembers
    {
      get
      {
        return GetCollection<ProjectSchedule.Module.BusinessObjects.ProjectMember>("SuperviseForMembers");
      }
    }
    [DevExpress.Xpo.AssociationAttribute("ReportToMembers-SuperviseForMembers")]
    public XPCollection<ProjectSchedule.Module.BusinessObjects.ProjectMember> ReportToMembers
    {
      get
      {
        return GetCollection<ProjectSchedule.Module.BusinessObjects.ProjectMember>("ReportToMembers");
      }
    }
    [DevExpress.Xpo.AssociationAttribute("ProjectMembers-ProjectTasks")]
    public XPCollection<ProjectSchedule.Module.BusinessObjects.ProjectTask> ProjectTasks
    {
      get
      {
        return GetCollection<ProjectSchedule.Module.BusinessObjects.ProjectTask>("ProjectTasks");
      }
    }
    [DevExpress.Xpo.AssociationAttribute("TaskMemberRoles-ProjectMember")]
    public XPCollection<ProjectSchedule.Module.BusinessObjects.TaskMemberRole> TaskMemberRoles
    {
      get
      {
        return GetCollection<ProjectSchedule.Module.BusinessObjects.TaskMemberRole>("TaskMemberRoles");
      }
    }
    [DevExpress.Xpo.AssociationAttribute("TaskMemberRolesGranted-GrantedByMember")]
    public XPCollection<ProjectSchedule.Module.BusinessObjects.TaskMemberRole> TaskMemberRolesGranted
    {
      get
      {
        return GetCollection<ProjectSchedule.Module.BusinessObjects.TaskMemberRole>("TaskMemberRolesGranted");
      }
    }
    [DevExpress.Xpo.AssociationAttribute("Comments-ProjectMember")]
    public XPCollection<ProjectSchedule.Module.BusinessObjects.Comment> Comments
    {
      get
      {
        return GetCollection<ProjectSchedule.Module.BusinessObjects.Comment>("Comments");
      }
    }
    [DevExpress.Xpo.AssociationAttribute("ProjectMembers-ProjectEvents")]
    public XPCollection<ProjectSchedule.Module.BusinessObjects.ProjectEvent> ProjectEvents
    {
      get
      {
        return GetCollection<ProjectSchedule.Module.BusinessObjects.ProjectEvent>("ProjectEvents");
      }
    }
    [DevExpress.Xpo.AssociationAttribute("ProjectMembers-WorkForCompanies")]
    public XPCollection<ProjectSchedule.Module.BusinessObjects.Company> WorkForCompanies
    {
      get
      {
        return GetCollection<ProjectSchedule.Module.BusinessObjects.Company>("WorkForCompanies");
      }
    }
    [DevExpress.Xpo.AssociationAttribute("BudgetAccounts-ProjectMember")]
    public XPCollection<ProjectSchedule.Module.BusinessObjects.BudgetAccount> BudgetAccounts
    {
      get
      {
        return GetCollection<ProjectSchedule.Module.BusinessObjects.BudgetAccount>("BudgetAccounts");
      }
    }
  }
}
