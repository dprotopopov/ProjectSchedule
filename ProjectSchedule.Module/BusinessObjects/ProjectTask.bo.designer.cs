//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using DevExpress.Persistent.Base;
using DevExpress.Persistent.BaseImpl;
using DevExpress.Xpo;
using DevExpress.ExpressApp;
using DevExpress.ExpressApp.Model;
using System.Collections.Generic;

namespace ProjectSchedule.Module.BusinessObjects
{
    [DefaultClassOptions]
    [DevExpress.ExpressApp.DC.XafDefaultPropertyAttribute("Subject")]
    [DevExpress.Persistent.Base.ImageNameAttribute("BO_Task")]
    public partial class ProjectTask : Task
    {
        public ProjectTask(DevExpress.Xpo.Session session)
            : base(session)
        {
        }
        [DevExpress.Xpo.AssociationAttribute("SubTasks-ParentTasks")]
        public XPCollection<ProjectSchedule.Module.BusinessObjects.ProjectTask> ParentTasks
        {
            get
            {
                return GetCollection<ProjectSchedule.Module.BusinessObjects.ProjectTask>("ParentTasks");
            }
        }
        [DevExpress.Xpo.AssociationAttribute("SubTasks-ParentTasks")]
        public XPCollection<ProjectSchedule.Module.BusinessObjects.ProjectTask> SubTasks
        {
            get
            {
                return GetCollection<ProjectSchedule.Module.BusinessObjects.ProjectTask>("SubTasks");
            }
        }
        [DevExpress.Xpo.AssociationAttribute("Comments-ProjectTasks")]
        public XPCollection<ProjectSchedule.Module.BusinessObjects.Comment> Comments
        {
            get
            {
                return GetCollection<ProjectSchedule.Module.BusinessObjects.Comment>("Comments");
            }
        }
        [DevExpress.Xpo.AssociationAttribute("ProjectTasks-ProjectEvents")]
        public XPCollection<ProjectSchedule.Module.BusinessObjects.ProjectEvent> ProjectEvents
        {
            get
            {
                return GetCollection<ProjectSchedule.Module.BusinessObjects.ProjectEvent>("ProjectEvents");
            }
        }
        [DevExpress.Xpo.AssociationAttribute("ProjectMembers-ProjectTasks")]
        public XPCollection<ProjectSchedule.Module.BusinessObjects.ProjectMember> ProjectMembers
        {
            get
            {
                return GetCollection<ProjectSchedule.Module.BusinessObjects.ProjectMember>("ProjectMembers");
            }
        }
        [DevExpress.Xpo.AssociationAttribute("Attachments-ProjectTask")]
        public XPCollection<ProjectSchedule.Module.BusinessObjects.Attachment> Attachments
        {
            get
            {
                return GetCollection<ProjectSchedule.Module.BusinessObjects.Attachment>("Attachments");
            }
        }
        [DevExpress.Xpo.AssociationAttribute("TaskMemberRoles-ProjectTask")]
        public XPCollection<ProjectSchedule.Module.BusinessObjects.TaskMemberRole> TaskMemberRoles
        {
            get
            {
                return GetCollection<ProjectSchedule.Module.BusinessObjects.TaskMemberRole>("TaskMemberRoles");
            }
        }
        public override void AfterConstruction()
        {
            base.AfterConstruction();
            StartDate = System.DateTime.Now;
            DueDate = System.DateTime.Now;
        }
        [DevExpress.Xpo.AssociationAttribute("BudgetAccounts-ProjectTask")]
        public XPCollection<ProjectSchedule.Module.BusinessObjects.BudgetAccount> BudgetAccounts
        {
            get
            {
                return GetCollection<ProjectSchedule.Module.BusinessObjects.BudgetAccount>("BudgetAccounts");
            }
        }

        private System.String _comment;
        [DevExpress.Xpo.NonPersistentAttribute]
        [DevExpress.Persistent.Base.VisibleInListViewAttribute(false)]
        [DevExpress.Persistent.Base.VisibleInLookupListViewAttribute(false)]
        [Size(SizeAttribute.Unlimited)]
        public System.String Comment
        {
            get
            {
                return _comment;
            }
            set
            {
                SetPropertyValue("Comment", ref _comment, value);
            }
        }

        private IList<Attachment> _files;
        [DevExpress.Xpo.NonPersistentAttribute]
        [DevExpress.Persistent.Base.VisibleInListViewAttribute(false)]
        [DevExpress.Persistent.Base.VisibleInLookupListViewAttribute(false)]
        [CollectionOperationSet(AllowAdd = true, AllowRemove = true)]
        public IList<Attachment> Files
        {
            get
            {
                if (_files == null)
                {
                    _files = new List<Attachment>();
                }
                return _files;
            }
        }
    }
}
